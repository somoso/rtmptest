// Generated by Apple Swift version 4.0 effective-3.2 (swiftlang-900.0.65 clang-900.0.37)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_attribute(external_source_symbol)
# define SWIFT_STRINGIFY(str) #str
# define SWIFT_MODULE_NAMESPACE_PUSH(module_name) _Pragma(SWIFT_STRINGIFY(clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in=module_name, generated_declaration))), apply_to=any(function, enum, objc_interface, objc_category, objc_protocol))))
# define SWIFT_MODULE_NAMESPACE_POP _Pragma("clang attribute pop")
#else
# define SWIFT_MODULE_NAMESPACE_PUSH(module_name)
# define SWIFT_MODULE_NAMESPACE_POP
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR __attribute__((enum_extensibility(open)))
# else
#  define SWIFT_ENUM_ATTR
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
@import ObjectiveC;
@import Dispatch;
@import Foundation;
@import CoreMedia;
@import GLKit;
@import CoreGraphics;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

SWIFT_MODULE_NAMESPACE_PUSH("lf")

SWIFT_CLASS("_TtC2lf11ASUndefined")
@interface ASUndefined : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


/// ActionScript 3.0 introduces a new XML type.
/// seealso:
/// 3.13 XML type (amf-file-format-spec.pdf)
SWIFT_CLASS("_TtC2lf5ASXML")
@interface ASXML : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)initWithData:(NSString * _Nonnull)data OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


/// ActionScript 1.0 and 2.0 and flash.xml.XMLDocument in ActionScript 3.0
/// seealso:
///
/// <ul>
///   <li>
///     2.17 XML Document Type (amf0-file-format-specification.pdf)
///   </li>
///   <li>
///     3.9 XMLDocument type (amf-file-format-spec.pdf)
///   </li>
/// </ul>
SWIFT_CLASS("_TtC2lf13ASXMLDocument")
@interface ASXMLDocument : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)initWithData:(NSString * _Nonnull)data OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

@class AVMixerRecorder;

SWIFT_CLASS("_TtC2lf7AVMixer")
@interface AVMixer : NSObject
@property (nonatomic, readonly, strong) AVMixerRecorder * _Nonnull recorder;
- (void)dispose;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end







@class AVAssetWriter;
@class AVAssetWriterInput;
@class AVAssetWriterInputPixelBufferAdaptor;

SWIFT_CLASS("_TtC2lf15AVMixerRecorder")
@interface AVMixerRecorder : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSDictionary<NSString *, NSDictionary<NSString *, id> *> * _Nonnull defaultOutputSettings;)
+ (NSDictionary<NSString *, NSDictionary<NSString *, id> *> * _Nonnull)defaultOutputSettings SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, strong) AVAssetWriter * _Nullable writer;
@property (nonatomic, copy) NSString * _Nullable fileName;
@property (nonatomic, copy) NSDictionary<NSString *, AVAssetWriterInput *> * _Nonnull writerInputs;
@property (nonatomic, copy) NSDictionary<NSString *, NSDictionary<NSString *, id> *> * _Nonnull outputSettings;
@property (nonatomic, strong) AVAssetWriterInputPixelBufferAdaptor * _Nullable pixelBufferAdaptor;
@property (nonatomic, readonly, strong) dispatch_queue_t _Nonnull lockQueue;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_CLASS("_TtC2lf30DefaultAVMixerRecorderDelegate")
@interface DefaultAVMixerRecorderDelegate : NSObject
@property (nonatomic) int64_t duration;
@property (nonatomic, copy) NSString * _Nonnull dateFormat;
@property (nonatomic, copy) NSURL * _Nonnull moviesDirectory;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface DefaultAVMixerRecorderDelegate (SWIFT_EXTENSION(lf))
- (void)rotateFile:(AVMixerRecorder * _Nonnull)recorder withPresentationTimeStamp:(CMTime)withPresentationTimeStamp mediaType:(NSString * _Nonnull)mediaType;
- (AVAssetWriterInputPixelBufferAdaptor * _Nullable)getPixelBufferAdaptor:(AVMixerRecorder * _Nonnull)recorder withWriterInput:(AVAssetWriterInput * _Nullable)withWriterInput SWIFT_WARN_UNUSED_RESULT;
- (AVAssetWriterInput * _Nullable)getWriterInput:(AVMixerRecorder * _Nonnull)recorder mediaType:(NSString * _Nonnull)mediaType sourceFormatHint:(CMFormatDescriptionRef _Nullable)sourceFormatHint SWIFT_WARN_UNUSED_RESULT;
- (void)didFinishWriting:(AVMixerRecorder * _Nonnull)recorder;
- (void)didStartRunning:(AVMixerRecorder * _Nonnull)recorder;
- (void)didStopRunning:(AVMixerRecorder * _Nonnull)recorder;
@end


/// flash.events.Event for Swift
SWIFT_CLASS("_TtC2lf5Event")
@interface Event : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull SYNC;)
+ (NSString * _Nonnull)SYNC SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull EVENT;)
+ (NSString * _Nonnull)EVENT SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull IO_ERROR;)
+ (NSString * _Nonnull)IO_ERROR SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull RTMP_STATUS;)
+ (NSString * _Nonnull)RTMP_STATUS SWIFT_WARN_UNUSED_RESULT;
+ (Event * _Nonnull)from:(NSNotification * _Nonnull)notification SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSString * _Nonnull type;
@property (nonatomic, readonly) BOOL bubbles;
@property (nonatomic, readonly) id _Nullable data;
@property (nonatomic, readonly, strong) id _Nullable target;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)initWithType:(NSString * _Nonnull)type bubbles:(BOOL)bubbles data:(id _Nullable)data OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


/// flash.events.EventDispatcher for Swift
SWIFT_CLASS("_TtC2lf15EventDispatcher")
@interface EventDispatcher : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithTarget:(id _Nonnull)target OBJC_DESIGNATED_INITIALIZER;
- (void)addEventListener:(NSString * _Nonnull)type selector:(SEL _Nonnull)selector observer:(id _Nullable)observer useCapture:(BOOL)useCapture;
- (void)removeEventListener:(NSString * _Nonnull)type selector:(SEL _Nonnull)selector observer:(id _Nullable)observer useCapture:(BOOL)useCapture;
- (void)dispatchWithEvent:(Event * _Nonnull)event;
- (void)dispatch:(NSString * _Nonnull)type bubbles:(BOOL)bubbles data:(id _Nullable)data;
@end

@class UIColor;
@class NSCoder;
@class NetStream;
@class EAGLContext;

SWIFT_CLASS("_TtC2lf8GLLFView")
@interface GLLFView : GLKView
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIColor * _Nonnull defaultBackgroundColor;)
+ (UIColor * _Nonnull)defaultBackgroundColor SWIFT_WARN_UNUSED_RESULT;
+ (void)setDefaultBackgroundColor:(UIColor * _Nonnull)value;
@property (nonatomic, copy) NSString * _Nonnull videoGravity;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)awakeFromNib;
- (void)drawRect:(CGRect)rect;
- (void)attachStream:(NetStream * _Nullable)stream;
- (nonnull instancetype)initWithFrame:(CGRect)frame context:(EAGLContext * _Nonnull)context SWIFT_UNAVAILABLE;
@end




SWIFT_CLASS("_TtC2lf10NetService")
@interface NetService : NSObject
@property (nonatomic, readonly, copy) NSData * _Nullable txtData;
- (nonnull instancetype)initWithDomain:(NSString * _Nonnull)domain type:(NSString * _Nonnull)type name:(NSString * _Nonnull)name port:(int32_t)port OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC2lf11HTTPService")
@interface HTTPService : NetService
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull type;)
+ (NSString * _Nonnull)type SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) int32_t defaultPort;)
+ (int32_t)defaultPort SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull defaultDocument;)
+ (NSString * _Nonnull)defaultDocument SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithDomain:(NSString * _Nonnull)domain type:(NSString * _Nonnull)type name:(NSString * _Nonnull)name port:(int32_t)port OBJC_DESIGNATED_INITIALIZER;
@end

@class HTTPStream;

SWIFT_CLASS("_TtC2lf10HLSService")
@interface HLSService : HTTPService
- (void)addHTTPStream:(HTTPStream * _Nonnull)stream;
- (void)removeHTTPStream:(HTTPStream * _Nonnull)stream;
- (nonnull instancetype)initWithDomain:(NSString * _Nonnull)domain type:(NSString * _Nonnull)type name:(NSString * _Nonnull)name port:(int32_t)port OBJC_DESIGNATED_INITIALIZER;
@end


@class VisualEffect;

SWIFT_CLASS("_TtC2lf9NetStream")
@interface NetStream : NSObject
@property (nonatomic, readonly, strong) AVMixer * _Nonnull mixer;
@property (nonatomic, readonly, strong) dispatch_queue_t _Nonnull lockQueue;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull audioSettings;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull videoSettings;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull captureSettings;
@property (nonatomic, copy) NSDictionary<NSString *, NSDictionary<NSString *, id> *> * _Nonnull recorderSettings;
- (BOOL)registerEffectWithVideo:(VisualEffect * _Nonnull)effect SWIFT_WARN_UNUSED_RESULT;
- (BOOL)unregisterEffectWithVideo:(VisualEffect * _Nonnull)effect SWIFT_WARN_UNUSED_RESULT;
- (void)dispose;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC2lf10HTTPStream")
@interface HTTPStream : NetStream
- (void)publish:(NSString * _Nullable)name;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC2lf9NetSocket")
@interface NetSocket : NSObject
- (NSInteger)doOutputWithBytes:(NSArray<NSNumber *> * _Nonnull)bytes locked:(uint32_t * _Nullable)locked;
- (NSInteger)doOutputWithData:(NSData * _Nonnull)data locked:(uint32_t * _Nullable)locked;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC2lf9NetClient")
@interface NetClient : NetSocket
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end




@class NSNetService;
@class NSInputStream;
@class NSOutputStream;

@interface NetService (SWIFT_EXTENSION(lf)) <NSNetServiceDelegate>
- (void)netService:(NSNetService * _Nonnull)sender didAcceptConnectionWithInputStream:(NSInputStream * _Nonnull)inputStream outputStream:(NSOutputStream * _Nonnull)outputStream;
@end


@interface NetService (SWIFT_EXTENSION(lf))
- (void)startRunning;
- (void)stopRunning;
@end


@class NSStream;

@interface NetSocket (SWIFT_EXTENSION(lf)) <NSStreamDelegate>
- (void)stream:(NSStream * _Nonnull)aStream handleEvent:(NSStreamEvent)eventCode;
@end



/// flash.net.NetConnection for Swift
SWIFT_CLASS("_TtC2lf14RTMPConnection")
@interface RTMPConnection : EventDispatcher
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) int64_t defaultWindowSizeS;)
+ (int64_t)defaultWindowSizeS SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSArray<NSString *> * _Nonnull supportedProtocols;)
+ (NSArray<NSString *> * _Nonnull)supportedProtocols SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger defaultPort;)
+ (NSInteger)defaultPort SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull defaultFlashVer;)
+ (NSString * _Nonnull)defaultFlashVer SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger defaultChunkSizeS;)
+ (NSInteger)defaultChunkSizeS SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger defaultCapabilities;)
+ (NSInteger)defaultCapabilities SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) uint8_t defaultObjectEncoding;)
+ (uint8_t)defaultObjectEncoding SWIFT_WARN_UNUSED_RESULT;
/// The URL of .swf.
@property (nonatomic, copy) NSString * _Nullable swfUrl;
/// The URL of an HTTP referer.
@property (nonatomic, copy) NSString * _Nullable pageUrl;
/// The time to wait for TCP/IP Handshake done.
@property (nonatomic) int64_t timeout;
/// The name of application.
@property (nonatomic, copy) NSString * _Nonnull flashVer;
/// The outgoing RTMPChunkSize.
@property (nonatomic) NSInteger chunkSize;
/// The URI passed to the RTMPConnection.connect() method.
@property (nonatomic, readonly, copy) NSURL * _Nullable uri;
/// This instance connected to server(true) or not(false).
@property (nonatomic, readonly) BOOL connected;
/// The object encoding for this RTMPConnection instance.
@property (nonatomic) uint8_t objectEncoding;
/// The statistics of total incoming bytes.
@property (nonatomic, readonly) int64_t totalBytesIn;
/// The statistics of total outgoing bytes.
@property (nonatomic, readonly) int64_t totalBytesOut;
/// The statistics of total RTMPStream counts.
@property (nonatomic, readonly) NSInteger totalStreamsCount;
/// The statistics of outgoing queue bytes per second.
@property (nonatomic, readonly, copy) NSArray<NSNumber *> * _Nonnull previousQueueBytesOut;
/// The statistics of incoming bytes per second.
@property (nonatomic, readonly) int32_t currentBytesInPerSecond;
/// The statistics of outgoing bytes per second.
@property (nonatomic, readonly) int32_t currentBytesOutPerSecond;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)connect:(NSString * _Nonnull)command SWIFT_AVAILABILITY(ios,introduced=8.0);
- (void)close;
- (nonnull instancetype)initWithTarget:(id _Nonnull)target SWIFT_UNAVAILABLE;
@end




/// flash.net.SharedObject for Swift
SWIFT_CLASS("_TtC2lf16RTMPSharedObject")
@interface RTMPSharedObject : EventDispatcher
+ (RTMPSharedObject * _Nonnull)getRemoteWithName:(NSString * _Nonnull)withName remotePath:(NSString * _Nonnull)remotePath persistence:(BOOL)persistence SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) uint8_t objectEncoding;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (void)setProperty:(NSString * _Nonnull)name :(id _Nullable)value;
- (void)connect:(RTMPConnection * _Nonnull)rtmpConnection;
- (void)clear;
- (void)close;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithTarget:(id _Nonnull)target SWIFT_UNAVAILABLE;
@end

@class AVSampleBufferDisplayLayer;

/// flash.net.NetStream for Swift
SWIFT_CLASS("_TtC2lf10RTMPStream")
@interface RTMPStream : NetStream
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) uint32_t defaultAudioBitrate;)
+ (uint32_t)defaultAudioBitrate SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) uint32_t defaultVideoBitrate;)
+ (uint32_t)defaultVideoBitrate SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) uint8_t objectEncoding;
@property (nonatomic, readonly) uint16_t currentFPS;
- (nonnull instancetype)initWithConnection:(RTMPConnection * _Nonnull)connection OBJC_DESIGNATED_INITIALIZER;
- (void)receiveAudioWithFlag:(BOOL)flag;
- (void)receiveVideoWithFlag:(BOOL)flag;
- (void)setSampleBufferLayerWithLayer:(AVSampleBufferDisplayLayer * _Nonnull)layer;
- (void)play:(NSString * _Nonnull)path SWIFT_AVAILABILITY(ios,introduced=8.0);
- (void)seek:(double)offset;
- (void)close;
- (void)pause;
- (void)resume;
- (void)togglePause;
- (void)appendFile:(NSURL * _Nonnull)file completionHandler:(void (^ _Nullable)(void))completionHandler;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end






@interface RTMPStream (SWIFT_EXTENSION(lf))
- (void)addEventListener:(NSString * _Nonnull)type selector:(SEL _Nonnull)selector observer:(id _Nullable)observer useCapture:(BOOL)useCapture;
- (void)removeEventListener:(NSString * _Nonnull)type selector:(SEL _Nonnull)selector observer:(id _Nullable)observer useCapture:(BOOL)useCapture;
- (void)dispatchWithEvent:(Event * _Nonnull)event;
- (void)dispatch:(NSString * _Nonnull)type bubbles:(BOOL)bubbles data:(id _Nullable)data;
@end


/// flash.net.Responder for Swift
SWIFT_CLASS("_TtC2lf9Responder")
@interface Responder : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC2lf12SoundSpliter")
@interface SoundSpliter : NSObject
- (void)appendSampleBuffer:(CMSampleBufferRef _Nonnull)sampleBuffer;
- (void)clear;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC2lf11TimerDriver")
@interface TimerDriver : NSObject
@property (nonatomic) uint64_t interval;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface TimerDriver (SWIFT_EXTENSION(lf))
@property (nonatomic, readonly) BOOL running;
- (void)startRunning;
- (void)stopRunning;
@end

@class CIImage;

SWIFT_CLASS("_TtC2lf12VisualEffect")
@interface VisualEffect : NSObject
- (CIImage * _Nonnull)execute:(CIImage * _Nonnull)image SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

SWIFT_MODULE_NAMESPACE_POP
#pragma clang diagnostic pop
